
FIRMWARE_PROJETO_FINAL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  000005aa  0000063e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080013a  0080013a  00000678  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000678  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a44  00000000  00000000  00000758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077e  00000000  00000000  0000119c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ef  00000000  00000000  0000191a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00001e0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042b  00000000  00000000  00001f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000034a  00000000  00000000  0000235f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000026a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  34:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  40:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  48:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__vector_18>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  54:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  58:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  5c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  60:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  64:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  68:	8a 00       	.word	0x008a	; ????
  6a:	93 00       	.word	0x0093	; ????
  6c:	9b 00       	.word	0x009b	; ????
  6e:	b9 00       	.word	0x00b9	; ????
  70:	d8 00       	.word	0x00d8	; ????
  72:	e6 00       	.word	0x00e6	; ????
  74:	f2 00       	.word	0x00f2	; ????
  76:	ff 00       	.word	0x00ff	; ????

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	d8 e0       	ldi	r29, 0x08	; 8
  80:	de bf       	out	0x3e, r29	; 62
  82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	ea ea       	ldi	r30, 0xAA	; 170
  8c:	f5 e0       	ldi	r31, 0x05	; 5
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	aa 33       	cpi	r26, 0x3A	; 58
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	aa e3       	ldi	r26, 0x3A	; 58
  9e:	b1 e0       	ldi	r27, 0x01	; 1
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
  a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
  a4:	ae 33       	cpi	r26, 0x3E	; 62
  a6:	b2 07       	cpc	r27, r18
  a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
  aa:	0e 94 5b 00 	call	0xb6	; 0xb6 <main>
  ae:	0c 94 d3 02 	jmp	0x5a6	; 0x5a6 <_exit>

000000b2 <__bad_interrupt>:
  b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <main>:
	flag_bluetooth_status = 0 -> DESCONECTADO
	flag_bluetooth_status = 1 -> CONECTADO
*/
unsigned char flag_ar_ventilar      = 0;
int main(void){	
	init_USART();
  b6:	0e 94 1b 01 	call	0x236	; 0x236 <init_USART>
	SREG = 0b10000000;	
  ba:	80 e8       	ldi	r24, 0x80	; 128
  bc:	8f bf       	out	0x3f, r24	; 63
	DDRB = 0b00111111;
  be:	8f e3       	ldi	r24, 0x3F	; 63
  c0:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;
  c2:	15 b8       	out	0x05, r1	; 5
	PORTB |= 1<<PORTB1;
  c4:	29 9a       	sbi	0x05, 1	; 5
	TCCR0A = 0;
  c6:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0b00000000;
  c8:	15 bc       	out	0x25, r1	; 37
	TIMSK0 = 0b00000001;	
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <main+0x1a>

000000d2 <__vector_18>:
    while (1){
		
    }
	PORTB &= ~(1<<PORTB1);
}
ISR(USART_RX_vect){
  d2:	1f 92       	push	r1
  d4:	0f 92       	push	r0
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	0f 92       	push	r0
  da:	11 24       	eor	r1, r1
  dc:	2f 93       	push	r18
  de:	3f 93       	push	r19
  e0:	4f 93       	push	r20
  e2:	5f 93       	push	r21
  e4:	6f 93       	push	r22
  e6:	7f 93       	push	r23
  e8:	8f 93       	push	r24
  ea:	9f 93       	push	r25
  ec:	af 93       	push	r26
  ee:	bf 93       	push	r27
  f0:	ef 93       	push	r30
  f2:	ff 93       	push	r31
	caracter = USART_Receive();
  f4:	0e 94 2f 01 	call	0x25e	; 0x25e <USART_Receive>
  f8:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <caracter>
	//USART_Transmit(caracter);
	switch(caracter){
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	fc 01       	movw	r30, r24
 100:	e1 56       	subi	r30, 0x61	; 97
 102:	f1 09       	sbc	r31, r1
 104:	e8 30       	cpi	r30, 0x08	; 8
 106:	f1 05       	cpc	r31, r1
 108:	08 f0       	brcs	.+2      	; 0x10c <__vector_18+0x3a>
 10a:	84 c0       	rjmp	.+264    	; 0x214 <__vector_18+0x142>
 10c:	ec 5c       	subi	r30, 0xCC	; 204
 10e:	ff 4f       	sbci	r31, 0xFF	; 255
 110:	0c 94 be 02 	jmp	0x57c	; 0x57c <__tablejump2__>
		case 'a': // LIGAR
		USART_printfln("LIGADO");
 114:	85 e0       	ldi	r24, 0x05	; 5
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
			flag_system_status = 1;
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <flag_system_status>
			PORTB |= 1<<PORTB1;
 122:	29 9a       	sbi	0x05, 1	; 5
		break;
 124:	77 c0       	rjmp	.+238    	; 0x214 <__vector_18+0x142>
		case 'b': // DESLIGAR
		USART_printfln("DESLIGADO");
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
			flag_system_status = 0;
 12e:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <flag_system_status>
			PORTB &= ~(1<<PORTB1);
 132:	29 98       	cbi	0x05, 1	; 5
		break;
 134:	6f c0       	rjmp	.+222    	; 0x214 <__vector_18+0x142>
		case 'c': // AUMENTAR TEMPERATURA
			if(flag_system_status && temperatura < TEMPERATURA_MAX){
 136:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <flag_system_status>
 13a:	88 23       	and	r24, r24
 13c:	09 f4       	brne	.+2      	; 0x140 <__vector_18+0x6e>
 13e:	6a c0       	rjmp	.+212    	; 0x214 <__vector_18+0x142>
 140:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 144:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 148:	8e 31       	cpi	r24, 0x1E	; 30
 14a:	91 05       	cpc	r25, r1
 14c:	08 f0       	brcs	.+2      	; 0x150 <__vector_18+0x7e>
 14e:	62 c0       	rjmp	.+196    	; 0x214 <__vector_18+0x142>
				temperatura++;
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 156:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				PORTB |= 1<<PORTB3;
 15a:	2b 9a       	sbi	0x05, 3	; 5
				//TCCR0B |= (1<<CS00)|(1<<CS02);
				USART_printf_int(temperatura);
 15c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 160:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 164:	0e 94 49 01 	call	0x292	; 0x292 <USART_printf_int>
				USART_printfln("");
 168:	89 e3       	ldi	r24, 0x39	; 57
 16a:	91 e0       	ldi	r25, 0x01	; 1
 16c:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
 170:	51 c0       	rjmp	.+162    	; 0x214 <__vector_18+0x142>
			}
		break;
		case 'd': // DIMINUIR TEMPERATURA			
			if(flag_system_status && temperatura > TEMPERATURA_MIN){
 172:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <flag_system_status>
 176:	88 23       	and	r24, r24
 178:	09 f4       	brne	.+2      	; 0x17c <__vector_18+0xaa>
 17a:	4c c0       	rjmp	.+152    	; 0x214 <__vector_18+0x142>
 17c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 180:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 184:	81 31       	cpi	r24, 0x11	; 17
 186:	91 05       	cpc	r25, r1
 188:	08 f4       	brcc	.+2      	; 0x18c <__vector_18+0xba>
 18a:	44 c0       	rjmp	.+136    	; 0x214 <__vector_18+0x142>
				temperatura--;
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 192:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				PORTB |= 1<<PORTB4;
 196:	2c 9a       	sbi	0x05, 4	; 5
				PORTB &= ~(1<<PORTB4);
 198:	2c 98       	cbi	0x05, 4	; 5
				USART_printf_int(temperatura);
 19a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 19e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a2:	0e 94 49 01 	call	0x292	; 0x292 <USART_printf_int>
				USART_printfln("");
 1a6:	89 e3       	ldi	r24, 0x39	; 57
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
 1ae:	32 c0       	rjmp	.+100    	; 0x214 <__vector_18+0x142>
				//TCCR0B |= (1<<CS00)|(1<<CS02);
			}	
		break;		
		case 'e': // ATIVAR VENTILAR
		USART_printfln("LIGA VENTILAR");
 1b0:	8f e0       	ldi	r24, 0x0F	; 15
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
			if(flag_system_status){
 1b8:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <flag_system_status>
 1bc:	88 23       	and	r24, r24
 1be:	51 f1       	breq	.+84     	; 0x214 <__vector_18+0x142>
				flag_ar_ventilar = 1;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
				PORTB |= 1<<PORTB5;
 1c6:	2d 9a       	sbi	0x05, 5	; 5
				PORTB &= ~(1<<PORTB5);
 1c8:	2d 98       	cbi	0x05, 5	; 5
 1ca:	24 c0       	rjmp	.+72     	; 0x214 <__vector_18+0x142>
			}
		break;
		case 'f': // DESATIVAR VENTILAR
		USART_printfln("DESLIGA VENTILAR");
 1cc:	8c e0       	ldi	r24, 0x0C	; 12
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
			if(flag_system_status){
 1d4:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <flag_system_status>
 1d8:	88 23       	and	r24, r24
 1da:	e1 f0       	breq	.+56     	; 0x214 <__vector_18+0x142>
				flag_ar_ventilar = 0;
 1dc:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <__data_end>
				PORTB &= ~(1<<PORTB5);
 1e0:	2d 98       	cbi	0x05, 5	; 5
 1e2:	18 c0       	rjmp	.+48     	; 0x214 <__vector_18+0x142>
			}
		break;
		case 'g': // CONECTADO COM O BLUETOOTH
		USART_printfln("CONECTADO COM O BLUETOOTH");
 1e4:	80 e2       	ldi	r24, 0x20	; 32
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
			if(!flag_bluetooth_status){
 1ec:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <flag_bluetooth_status>
 1f0:	81 11       	cpse	r24, r1
 1f2:	10 c0       	rjmp	.+32     	; 0x214 <__vector_18+0x142>
				flag_bluetooth_status = 1;
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <flag_bluetooth_status>
				PORTB |= 1<<PORTB0;
 1fa:	28 9a       	sbi	0x05, 0	; 5
 1fc:	0b c0       	rjmp	.+22     	; 0x214 <__vector_18+0x142>
			}
		break;
		case 'h': // DESCONECTADO COM O BLUETOOTH
		USART_printfln("DESCONECTADO COM O BLUETOOTH");
 1fe:	8d e1       	ldi	r24, 0x1D	; 29
 200:	91 e0       	ldi	r25, 0x01	; 1
 202:	0e 94 37 01 	call	0x26e	; 0x26e <USART_printfln>
			if(flag_bluetooth_status){
 206:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <flag_bluetooth_status>
 20a:	88 23       	and	r24, r24
 20c:	19 f0       	breq	.+6      	; 0x214 <__vector_18+0x142>
				flag_bluetooth_status=0;
 20e:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <flag_bluetooth_status>
				PORTB &= ~(1<<PORTB0);
 212:	28 98       	cbi	0x05, 0	; 5
			}
		break;
	}	
 214:	ff 91       	pop	r31
 216:	ef 91       	pop	r30
 218:	bf 91       	pop	r27
 21a:	af 91       	pop	r26
 21c:	9f 91       	pop	r25
 21e:	8f 91       	pop	r24
 220:	7f 91       	pop	r23
 222:	6f 91       	pop	r22
 224:	5f 91       	pop	r21
 226:	4f 91       	pop	r20
 228:	3f 91       	pop	r19
 22a:	2f 91       	pop	r18
 22c:	0f 90       	pop	r0
 22e:	0f be       	out	0x3f, r0	; 63
 230:	0f 90       	pop	r0
 232:	1f 90       	pop	r1
 234:	18 95       	reti

00000236 <init_USART>:
void USART_printf(unsigned char *String){
	int i=0;
	for(i=0;String[i]!=0;i++){
		USART_Transmit(String[i]);
	}
}
 236:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 23a:	87 e6       	ldi	r24, 0x67	; 103
 23c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 240:	88 e9       	ldi	r24, 0x98	; 152
 242:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 246:	8e e0       	ldi	r24, 0x0E	; 14
 248:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 24c:	08 95       	ret

0000024e <USART_Transmit>:
 24e:	e0 ec       	ldi	r30, 0xC0	; 192
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	90 81       	ld	r25, Z
 254:	95 ff       	sbrs	r25, 5
 256:	fd cf       	rjmp	.-6      	; 0x252 <USART_Transmit+0x4>
 258:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 25c:	08 95       	ret

0000025e <USART_Receive>:
 25e:	e0 ec       	ldi	r30, 0xC0	; 192
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	88 23       	and	r24, r24
 266:	ec f7       	brge	.-6      	; 0x262 <USART_Receive+0x4>
 268:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 26c:	08 95       	ret

0000026e <USART_printfln>:
void USART_printfln(unsigned char *String){
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	ec 01       	movw	r28, r24
	int i=0;
	for(i=0;String[i]!=0;i++){
 274:	88 81       	ld	r24, Y
 276:	88 23       	and	r24, r24
 278:	31 f0       	breq	.+12     	; 0x286 <USART_printfln+0x18>
 27a:	21 96       	adiw	r28, 0x01	; 1
		USART_Transmit(String[i]);
 27c:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
		USART_Transmit(String[i]);
	}
}
void USART_printfln(unsigned char *String){
	int i=0;
	for(i=0;String[i]!=0;i++){
 280:	89 91       	ld	r24, Y+
 282:	81 11       	cpse	r24, r1
 284:	fb cf       	rjmp	.-10     	; 0x27c <USART_printfln+0xe>
		USART_Transmit(String[i]);
	}
	USART_Transmit(0x0D);
 286:	8d e0       	ldi	r24, 0x0D	; 13
 288:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
}
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <USART_printf_int>:
void USART_printf_int(unsigned int Valor){
 292:	ef 92       	push	r14
 294:	ff 92       	push	r15
 296:	0f 93       	push	r16
 298:	1f 93       	push	r17
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	ec 01       	movw	r28, r24
		switch(Valor){
 2a0:	84 36       	cpi	r24, 0x64	; 100
 2a2:	91 05       	cpc	r25, r1
 2a4:	20 f4       	brcc	.+8      	; 0x2ae <USART_printf_int+0x1c>
 2a6:	8a 30       	cpi	r24, 0x0A	; 10
 2a8:	91 05       	cpc	r25, r1
 2aa:	60 f0       	brcs	.+24     	; 0x2c4 <USART_printf_int+0x32>
 2ac:	58 c0       	rjmp	.+176    	; 0x35e <USART_printf_int+0xcc>
 2ae:	88 3e       	cpi	r24, 0xE8	; 232
 2b0:	23 e0       	ldi	r18, 0x03	; 3
 2b2:	92 07       	cpc	r25, r18
 2b4:	08 f4       	brcc	.+2      	; 0x2b8 <USART_printf_int+0x26>
 2b6:	a6 c0       	rjmp	.+332    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 2b8:	80 31       	cpi	r24, 0x10	; 16
 2ba:	37 e2       	ldi	r19, 0x27	; 39
 2bc:	93 07       	cpc	r25, r19
 2be:	08 f4       	brcc	.+2      	; 0x2c2 <USART_printf_int+0x30>
 2c0:	fc c0       	rjmp	.+504    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 2c2:	55 c1       	rjmp	.+682    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
			case 0 ... 9:
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)%10)+'0');
 2c4:	9c 01       	movw	r18, r24
 2c6:	36 95       	lsr	r19
 2c8:	27 95       	ror	r18
 2ca:	36 95       	lsr	r19
 2cc:	27 95       	ror	r18
 2ce:	36 95       	lsr	r19
 2d0:	27 95       	ror	r18
 2d2:	a5 ec       	ldi	r26, 0xC5	; 197
 2d4:	b0 e2       	ldi	r27, 0x20	; 32
 2d6:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 2da:	92 95       	swap	r25
 2dc:	82 95       	swap	r24
 2de:	8f 70       	andi	r24, 0x0F	; 15
 2e0:	89 27       	eor	r24, r25
 2e2:	9f 70       	andi	r25, 0x0F	; 15
 2e4:	89 27       	eor	r24, r25
 2e6:	48 ee       	ldi	r20, 0xE8	; 232
 2e8:	53 e0       	ldi	r21, 0x03	; 3
 2ea:	84 9f       	mul	r24, r20
 2ec:	90 01       	movw	r18, r0
 2ee:	85 9f       	mul	r24, r21
 2f0:	30 0d       	add	r19, r0
 2f2:	94 9f       	mul	r25, r20
 2f4:	30 0d       	add	r19, r0
 2f6:	11 24       	eor	r1, r1
 2f8:	c2 1b       	sub	r28, r18
 2fa:	d3 0b       	sbc	r29, r19
 2fc:	9e 01       	movw	r18, r28
 2fe:	36 95       	lsr	r19
 300:	27 95       	ror	r18
 302:	36 95       	lsr	r19
 304:	27 95       	ror	r18
 306:	ab e7       	ldi	r26, 0x7B	; 123
 308:	b4 e1       	ldi	r27, 0x14	; 20
 30a:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 30e:	96 95       	lsr	r25
 310:	87 95       	ror	r24
 312:	44 e6       	ldi	r20, 0x64	; 100
 314:	48 9f       	mul	r20, r24
 316:	90 01       	movw	r18, r0
 318:	49 9f       	mul	r20, r25
 31a:	30 0d       	add	r19, r0
 31c:	11 24       	eor	r1, r1
 31e:	c2 1b       	sub	r28, r18
 320:	d3 0b       	sbc	r29, r19
 322:	9e 01       	movw	r18, r28
 324:	ad ec       	ldi	r26, 0xCD	; 205
 326:	bc ec       	ldi	r27, 0xCC	; 204
 328:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 32c:	96 95       	lsr	r25
 32e:	87 95       	ror	r24
 330:	96 95       	lsr	r25
 332:	87 95       	ror	r24
 334:	96 95       	lsr	r25
 336:	87 95       	ror	r24
 338:	9c 01       	movw	r18, r24
 33a:	22 0f       	add	r18, r18
 33c:	33 1f       	adc	r19, r19
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	82 0f       	add	r24, r18
 34c:	93 1f       	adc	r25, r19
 34e:	9e 01       	movw	r18, r28
 350:	28 1b       	sub	r18, r24
 352:	39 0b       	sbc	r19, r25
 354:	c9 01       	movw	r24, r18
 356:	80 5d       	subi	r24, 0xD0	; 208
 358:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			break;
 35c:	08 c1       	rjmp	.+528    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
			case 10 ... 99:
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)/10)+'0');
 35e:	9c 01       	movw	r18, r24
 360:	36 95       	lsr	r19
 362:	27 95       	ror	r18
 364:	36 95       	lsr	r19
 366:	27 95       	ror	r18
 368:	36 95       	lsr	r19
 36a:	27 95       	ror	r18
 36c:	a5 ec       	ldi	r26, 0xC5	; 197
 36e:	b0 e2       	ldi	r27, 0x20	; 32
 370:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 374:	92 95       	swap	r25
 376:	82 95       	swap	r24
 378:	8f 70       	andi	r24, 0x0F	; 15
 37a:	89 27       	eor	r24, r25
 37c:	9f 70       	andi	r25, 0x0F	; 15
 37e:	89 27       	eor	r24, r25
 380:	48 ee       	ldi	r20, 0xE8	; 232
 382:	53 e0       	ldi	r21, 0x03	; 3
 384:	84 9f       	mul	r24, r20
 386:	90 01       	movw	r18, r0
 388:	85 9f       	mul	r24, r21
 38a:	30 0d       	add	r19, r0
 38c:	94 9f       	mul	r25, r20
 38e:	30 0d       	add	r19, r0
 390:	11 24       	eor	r1, r1
 392:	c2 1b       	sub	r28, r18
 394:	d3 0b       	sbc	r29, r19
 396:	9e 01       	movw	r18, r28
 398:	36 95       	lsr	r19
 39a:	27 95       	ror	r18
 39c:	36 95       	lsr	r19
 39e:	27 95       	ror	r18
 3a0:	ab e7       	ldi	r26, 0x7B	; 123
 3a2:	b4 e1       	ldi	r27, 0x14	; 20
 3a4:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 3a8:	8c 01       	movw	r16, r24
 3aa:	16 95       	lsr	r17
 3ac:	07 95       	ror	r16
 3ae:	24 e6       	ldi	r18, 0x64	; 100
 3b0:	20 9f       	mul	r18, r16
 3b2:	c0 01       	movw	r24, r0
 3b4:	21 9f       	mul	r18, r17
 3b6:	90 0d       	add	r25, r0
 3b8:	11 24       	eor	r1, r1
 3ba:	8e 01       	movw	r16, r28
 3bc:	08 1b       	sub	r16, r24
 3be:	19 0b       	sbc	r17, r25
 3c0:	98 01       	movw	r18, r16
 3c2:	ad ec       	ldi	r26, 0xCD	; 205
 3c4:	bc ec       	ldi	r27, 0xCC	; 204
 3c6:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 3ca:	ec 01       	movw	r28, r24
 3cc:	d6 95       	lsr	r29
 3ce:	c7 95       	ror	r28
 3d0:	d6 95       	lsr	r29
 3d2:	c7 95       	ror	r28
 3d4:	d6 95       	lsr	r29
 3d6:	c7 95       	ror	r28
 3d8:	8c 2f       	mov	r24, r28
 3da:	80 5d       	subi	r24, 0xD0	; 208
 3dc:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)%10)+'0');
 3e0:	ce 01       	movw	r24, r28
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	cc 0f       	add	r28, r28
 3e8:	dd 1f       	adc	r29, r29
 3ea:	cc 0f       	add	r28, r28
 3ec:	dd 1f       	adc	r29, r29
 3ee:	cc 0f       	add	r28, r28
 3f0:	dd 1f       	adc	r29, r29
 3f2:	c8 0f       	add	r28, r24
 3f4:	d9 1f       	adc	r29, r25
 3f6:	c8 01       	movw	r24, r16
 3f8:	8c 1b       	sub	r24, r28
 3fa:	9d 0b       	sbc	r25, r29
 3fc:	80 5d       	subi	r24, 0xD0	; 208
 3fe:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			break;
 402:	b5 c0       	rjmp	.+362    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
			
			case 100 ... 999:
			USART_Transmit((Valor - (Valor/1000)*1000)/100 + '0');
 404:	9c 01       	movw	r18, r24
 406:	36 95       	lsr	r19
 408:	27 95       	ror	r18
 40a:	36 95       	lsr	r19
 40c:	27 95       	ror	r18
 40e:	36 95       	lsr	r19
 410:	27 95       	ror	r18
 412:	a5 ec       	ldi	r26, 0xC5	; 197
 414:	b0 e2       	ldi	r27, 0x20	; 32
 416:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 41a:	7c 01       	movw	r14, r24
 41c:	f6 94       	lsr	r15
 41e:	e7 94       	ror	r14
 420:	f6 94       	lsr	r15
 422:	e7 94       	ror	r14
 424:	f6 94       	lsr	r15
 426:	e7 94       	ror	r14
 428:	f6 94       	lsr	r15
 42a:	e7 94       	ror	r14
 42c:	28 ee       	ldi	r18, 0xE8	; 232
 42e:	33 e0       	ldi	r19, 0x03	; 3
 430:	e2 9e       	mul	r14, r18
 432:	c0 01       	movw	r24, r0
 434:	e3 9e       	mul	r14, r19
 436:	90 0d       	add	r25, r0
 438:	f2 9e       	mul	r15, r18
 43a:	90 0d       	add	r25, r0
 43c:	11 24       	eor	r1, r1
 43e:	7e 01       	movw	r14, r28
 440:	e8 1a       	sub	r14, r24
 442:	f9 0a       	sbc	r15, r25
 444:	97 01       	movw	r18, r14
 446:	36 95       	lsr	r19
 448:	27 95       	ror	r18
 44a:	36 95       	lsr	r19
 44c:	27 95       	ror	r18
 44e:	ab e7       	ldi	r26, 0x7B	; 123
 450:	b4 e1       	ldi	r27, 0x14	; 20
 452:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 456:	8c 01       	movw	r16, r24
 458:	16 95       	lsr	r17
 45a:	07 95       	ror	r16
 45c:	80 e3       	ldi	r24, 0x30	; 48
 45e:	80 0f       	add	r24, r16
 460:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)/10)+'0');
 464:	24 e6       	ldi	r18, 0x64	; 100
 466:	20 9f       	mul	r18, r16
 468:	c0 01       	movw	r24, r0
 46a:	21 9f       	mul	r18, r17
 46c:	90 0d       	add	r25, r0
 46e:	11 24       	eor	r1, r1
 470:	e7 01       	movw	r28, r14
 472:	c8 1b       	sub	r28, r24
 474:	d9 0b       	sbc	r29, r25
 476:	9e 01       	movw	r18, r28
 478:	ad ec       	ldi	r26, 0xCD	; 205
 47a:	bc ec       	ldi	r27, 0xCC	; 204
 47c:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 480:	8c 01       	movw	r16, r24
 482:	16 95       	lsr	r17
 484:	07 95       	ror	r16
 486:	16 95       	lsr	r17
 488:	07 95       	ror	r16
 48a:	16 95       	lsr	r17
 48c:	07 95       	ror	r16
 48e:	80 e3       	ldi	r24, 0x30	; 48
 490:	80 0f       	add	r24, r16
 492:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)%10)+'0');
 496:	c8 01       	movw	r24, r16
 498:	88 0f       	add	r24, r24
 49a:	99 1f       	adc	r25, r25
 49c:	00 0f       	add	r16, r16
 49e:	11 1f       	adc	r17, r17
 4a0:	00 0f       	add	r16, r16
 4a2:	11 1f       	adc	r17, r17
 4a4:	00 0f       	add	r16, r16
 4a6:	11 1f       	adc	r17, r17
 4a8:	08 0f       	add	r16, r24
 4aa:	19 1f       	adc	r17, r25
 4ac:	ce 01       	movw	r24, r28
 4ae:	80 1b       	sub	r24, r16
 4b0:	91 0b       	sbc	r25, r17
 4b2:	80 5d       	subi	r24, 0xD0	; 208
 4b4:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			break;
 4b8:	5a c0       	rjmp	.+180    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
			
			case 1000 ... 9999:
			USART_Transmit(Valor/1000 + '0');
 4ba:	9c 01       	movw	r18, r24
 4bc:	36 95       	lsr	r19
 4be:	27 95       	ror	r18
 4c0:	36 95       	lsr	r19
 4c2:	27 95       	ror	r18
 4c4:	36 95       	lsr	r19
 4c6:	27 95       	ror	r18
 4c8:	a5 ec       	ldi	r26, 0xC5	; 197
 4ca:	b0 e2       	ldi	r27, 0x20	; 32
 4cc:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 4d0:	8c 01       	movw	r16, r24
 4d2:	12 95       	swap	r17
 4d4:	02 95       	swap	r16
 4d6:	0f 70       	andi	r16, 0x0F	; 15
 4d8:	01 27       	eor	r16, r17
 4da:	1f 70       	andi	r17, 0x0F	; 15
 4dc:	01 27       	eor	r16, r17
 4de:	80 e3       	ldi	r24, 0x30	; 48
 4e0:	80 0f       	add	r24, r16
 4e2:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			USART_Transmit((Valor - (Valor/1000)*1000)/100 + '0');
 4e6:	28 ee       	ldi	r18, 0xE8	; 232
 4e8:	33 e0       	ldi	r19, 0x03	; 3
 4ea:	02 9f       	mul	r16, r18
 4ec:	c0 01       	movw	r24, r0
 4ee:	03 9f       	mul	r16, r19
 4f0:	90 0d       	add	r25, r0
 4f2:	12 9f       	mul	r17, r18
 4f4:	90 0d       	add	r25, r0
 4f6:	11 24       	eor	r1, r1
 4f8:	c8 1b       	sub	r28, r24
 4fa:	d9 0b       	sbc	r29, r25
 4fc:	9e 01       	movw	r18, r28
 4fe:	36 95       	lsr	r19
 500:	27 95       	ror	r18
 502:	36 95       	lsr	r19
 504:	27 95       	ror	r18
 506:	ab e7       	ldi	r26, 0x7B	; 123
 508:	b4 e1       	ldi	r27, 0x14	; 20
 50a:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 50e:	8c 01       	movw	r16, r24
 510:	16 95       	lsr	r17
 512:	07 95       	ror	r16
 514:	80 e3       	ldi	r24, 0x30	; 48
 516:	80 0f       	add	r24, r16
 518:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)/10)+'0');
 51c:	24 e6       	ldi	r18, 0x64	; 100
 51e:	20 9f       	mul	r18, r16
 520:	c0 01       	movw	r24, r0
 522:	21 9f       	mul	r18, r17
 524:	90 0d       	add	r25, r0
 526:	11 24       	eor	r1, r1
 528:	c8 1b       	sub	r28, r24
 52a:	d9 0b       	sbc	r29, r25
 52c:	9e 01       	movw	r18, r28
 52e:	ad ec       	ldi	r26, 0xCD	; 205
 530:	bc ec       	ldi	r27, 0xCC	; 204
 532:	0e 94 c4 02 	call	0x588	; 0x588 <__umulhisi3>
 536:	8c 01       	movw	r16, r24
 538:	16 95       	lsr	r17
 53a:	07 95       	ror	r16
 53c:	16 95       	lsr	r17
 53e:	07 95       	ror	r16
 540:	16 95       	lsr	r17
 542:	07 95       	ror	r16
 544:	80 e3       	ldi	r24, 0x30	; 48
 546:	80 0f       	add	r24, r16
 548:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			USART_Transmit((((Valor -(1000*(Valor/1000)))%100)%10)+'0');
 54c:	c8 01       	movw	r24, r16
 54e:	88 0f       	add	r24, r24
 550:	99 1f       	adc	r25, r25
 552:	00 0f       	add	r16, r16
 554:	11 1f       	adc	r17, r17
 556:	00 0f       	add	r16, r16
 558:	11 1f       	adc	r17, r17
 55a:	00 0f       	add	r16, r16
 55c:	11 1f       	adc	r17, r17
 55e:	08 0f       	add	r16, r24
 560:	19 1f       	adc	r17, r25
 562:	ce 01       	movw	r24, r28
 564:	80 1b       	sub	r24, r16
 566:	91 0b       	sbc	r25, r17
 568:	80 5d       	subi	r24, 0xD0	; 208
 56a:	0e 94 27 01 	call	0x24e	; 0x24e <USART_Transmit>
			break;
		}
 56e:	df 91       	pop	r29
 570:	cf 91       	pop	r28
 572:	1f 91       	pop	r17
 574:	0f 91       	pop	r16
 576:	ff 90       	pop	r15
 578:	ef 90       	pop	r14
 57a:	08 95       	ret

0000057c <__tablejump2__>:
 57c:	ee 0f       	add	r30, r30
 57e:	ff 1f       	adc	r31, r31
 580:	05 90       	lpm	r0, Z+
 582:	f4 91       	lpm	r31, Z
 584:	e0 2d       	mov	r30, r0
 586:	09 94       	ijmp

00000588 <__umulhisi3>:
 588:	a2 9f       	mul	r26, r18
 58a:	b0 01       	movw	r22, r0
 58c:	b3 9f       	mul	r27, r19
 58e:	c0 01       	movw	r24, r0
 590:	a3 9f       	mul	r26, r19
 592:	70 0d       	add	r23, r0
 594:	81 1d       	adc	r24, r1
 596:	11 24       	eor	r1, r1
 598:	91 1d       	adc	r25, r1
 59a:	b2 9f       	mul	r27, r18
 59c:	70 0d       	add	r23, r0
 59e:	81 1d       	adc	r24, r1
 5a0:	11 24       	eor	r1, r1
 5a2:	91 1d       	adc	r25, r1
 5a4:	08 95       	ret

000005a6 <_exit>:
 5a6:	f8 94       	cli

000005a8 <__stop_program>:
 5a8:	ff cf       	rjmp	.-2      	; 0x5a8 <__stop_program>
